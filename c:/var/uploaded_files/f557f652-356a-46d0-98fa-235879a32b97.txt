Which ls 查看命令所在的位置
Whoami。显示当前用户名
Id root 判断用户是否存在
clear:清屏
type :判断命令是内部命令还是外部命令
export :定义全局h环境变量 export SPS1=""
man 查看命令手册
man -k 命令模糊查询
info info 
help -dms 命令 查看命令的使用
alias name=“value” 定义别名
unalias 撤销别名
id -u root 获取root用户id
·· 命令的引用 如 echo `id -u root`
配置文件修改后 需要使用touch来时配置文件生效
Hostname  [要命名的主机名]获取当前主机名
systemctl status | start | stop | disablead 开机关闭 | enable （开机启动）  firewalld。查看防火墙状态


cut命令是一个选取命令，其功能是将文件中的每一行”字节” ”字符” ”字段” 进行剪切，选取我们需要的，并将这些选取好的数据输出至标准输出
二、格式

cut -[n]b file
cut -c file
cut -d[分隔符] -f[域] file


Surname




ss [-ntul]  显示端口监听信息   t tcp u utp l详细信息 a 显示所有的端口

ll 查看那些用户有执行命令的权限
[root@localhost etc]# ll /usr/sbin/useradd
-rwxr-x---. 1 root root 103096 10月 15 2014 /usr/sbin/useradd

linux 根目录结构
/ 虚拟目录的根目录。通常不会在这里存储文件
/bin 二进制目录，存放许多用户级的GNU工具  
/boot 启动目录，存放启动文件
/dev 设备目录，Linux在这里创建设备节点
/etc 系统配置文件目录  
/home 主目录，Linux在这里创建用户目录
/lib 库目录，存放系统和应用程序的库文件
/media 媒体目录，可移动媒体设备的常用挂载点 
/mnt 挂载目录，另一个可移动媒体设备的常用挂载点
/opt 可选目录，常用于存放第三方软件包和数据文件
/proc 进程目录，存放现有硬件及当前进程的相关信息
/root root用户的主目录
/sbin 系统二进制目录，存放许多GNU管理员级工具
/run 运行目录，存放系统运作时的运行时数据
/srv 服务目录，存放本地服务的相关文件
/sys 系统目录，存放系统硬件信息的相关文件
/tmp 临时目录，可以在该目录中创建和删除临时工作文件
/usr 用户二进制目录，大量用户级的GNU工具和数据文件都存储在这里
/var 可变目录，用以存放经常变化的文件，比如日志文件



pwd 显示当前工作目录

ls命令最基本的形式会显示当前目录下的文件和目录:
ls -F 参数在目录名后加了正斜线(/)
ls -a  隐藏文件和普通文件及目录一起显示出来
ls -F -R 作递归选项。它列出了当前目录下包含的子目录中 的文件
ls -l 参数会产生长列表格式的输出，包含了目录中每个文件的更多相关信息.ll相同于 ls -l
ls -l --time=atime可以显示文件的访问时间
ls -i 显示文件的inode编码 不同文件的inode编码不同

touch 文件名  用于创建空文件也可以改变文件的最后一次的修改时间
touch -a 文件名 只改变文件的访问时间
vim 编辑文件
按 ESC 后 输入 ：wq 可退出编辑 w 保存 q 退出

复制文件 
cp source destination  当source和destination参数都是文件名时，cp命令将源文件复制成一个新文件，并且以 destination命名。
											 新文件就像全新的文件一样，有新的修改时间。
-i 当文件已经存在的时候提示用户是否进行覆盖 输入 y or n 进行后续操作
-R 递归复制  将目录下所有的文件都复制到目标文件夹下


链接文件
符号链接(真实存在的文件) ln -s 源文件（必须存在）  要链接的文件
硬链接（虚拟文件）ln 源文件 目标文件   源文件目标文件本质上就是一个文件 他们的inode编码是一样的

移动或重命名文件
mv 源文件  目标文件（新名字）

删除文件
rm -i（提示是否删除该文件） y/n
rm -f 不提示信息直接删除该文件
rm -rf 强制删除文件/目录


创建目录
mkdir [-p（创建多级目录）] 目录名
rmdir 删除非空目录
rm -ri 循环进入目录进行删除操作，每次都会有提示信息

file resource  判断是文件还是目录

cat [参数] file  查看文件，在终端显示文件信息  -n 行号  -b 只给非空行加上行号  -T 去掉制表符 
more 文件名  一次显示一屏的文件文本，可以按住enter键向下查看
less 文件名  less命令能够识别上下键以及上下翻页键
tail [参数] 文件名  -n 要查看的行数 -f 动态实时查看文件，允许你在其他进程使用该文件时查看文件的内容 
head [-n] 从文件头部开始要查看的文件行数,默认10行


ps 查看进程
ps -f 显示进程信息
ps -forest命令 展示了这些子shell间的嵌套结构
    -e：显示所有进程
     常用组合：-efln


    -f：显示比较完整的进程信息
    -F：显示更完整的进程信息
    -H：显示进程之间的层次关系
pidof：根据进程名称，获取进程pid

pgrep：根据某些条件查找我们需要的某些进程

top 命令跟ps命令相似，能够显示进程信息，但它是实时显 示的。

kill pid 杀死进程
kill -s 信号 pid 强制终止
killall killall 命令也支持通配符，这在系统因负载过大而变得很慢时很有用。

Linux上用来挂载媒体的命令叫作mount。默认情况下，mount命令会输出当前系统上挂载的设备列表
mount命令提供如下四部分信息: 
媒体的设备文件名
媒体挂载到虚拟目录的挂载点
文件系统类型
已挂载媒体的访问状态


从Linux系统上移除一个可移动设备时，不能直接从系统上移除，而应该先卸载
卸载设备的命令是umount(是的，你没看错，命令名中并没有字母n，这一点有时候很让人 困惑)。umount命令的格式非常简单:
umount [directory | device ]

df 查看某个设备上还有多少磁盘空间

df命令有一些命令行参数可用，但基本上不会用到。一个常用的参数是-h。它会把输出中的磁盘空间按照用户易读的形式显示，

通常用M来替代兆字节，用G替代吉字节

du命令可以显示某个特定目录(默认情况下是当前目录)的 磁盘使用情况。这一方法可用来快速判断系统上某个目录下是不是有超大文件。
-c:显示所有已列出文件总的大小。
-h:按用户易读的格式输出大小，即用K替代千字节，用M替代兆字节，用G替代吉字节。
-s:显示每个输出参数的总计。

sort [-n][-M] 文件名  对文件内容进行排序  参数n 当文件中有数字的时候， 加上n就不会吧数字当作字符。 参数M 对月份进行排序 

grep  [参数] 要查找的字段 文件名 
-n 行号
-v 倒序查找
-e 多个条件
[正则表达式] 例： grep [tf] test2 显示test2中包含t或者f行

命令可以以；分隔来执行，如果用括号来包起来，会生成了一个子shell来执行对应的命令。




linux下使用tar命令

解压
语法：tar [主选项+辅选项] 文件或者目录

使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。

主选项：

c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。相当于打包。

x 从档案文件中释放文件。相当于拆包。

t 列出档案文件的内容，查看已经备份了哪些文件。

特别注意，在参数的下达中， c/x/t 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。

辅助选项：

-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩或解压？ 一般格式为xx.tar.gz或xx. tgz

-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩或解压？一般格式为xx.tar.bz2  

-v ：压缩的过程中显示文件！这个常用

-f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加其他参数！

-p ：使用原文件的原来属性（属性不会依据使用者而变）

--exclude FILE：在压缩的过程中，不要将 FILE 打包！

 

范例：

范例一：将整个 /etc 目录下的文件全部打包成为 /tmp/etc.tar

[root@linux ~]# tar -cvf /tmp/etc.tar /etc　　　　<==仅打包，不压缩！

[root@linux ~]# tar -zcvf /tmp/etc.tar.gz /etc　　<==打包后，以 gzip 压缩

[root@linux ~]# tar -jcvf /tmp/etc.tar.bz2 /etc　　<==打包后，以 bzip2 压缩

# 特别注意，在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。

# 如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 gzip 压缩过的 tar file ～

# 如果加 j 参数，则以 .tar.bz2 来作为附档名啊～

# 上述指令在执行的时候，会显示一个警告讯息：

# 『tar: Removing leading `/" from member names』那是关於绝对路径的特殊设定。

 

范例二：查阅上述 /tmp/etc.tar.gz 文件内有哪些文件？

[root@linux ~]# tar -ztvf /tmp/etc.tar.gz

# 由於我们使用 gzip 压缩，所以要查阅该 tar file 内的文件时，



# 就得要加上 z 这个参数了！这很重要的！

 

范例三：将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下

[root@linux ~]# cd /usr/local/src

[root@linux src]# tar -zxvf /tmp/etc.tar.gz

# 在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说

# 我先将工作目录变换到 /usr/local/src 底下，并且解开 /tmp/etc.tar.gz

# 则解开的目录会在 /usr/local/src/etc ，另外，如果您进入 /usr/local/src/etc

# 则会发现，该目录下的文件属性与 /etc/ 可能会有所不同喔！

 

范例四：在 /tmp 底下，我只想要将 /tmp/etc.tar.gz 内的 etc/passwd 解开而已

[root@linux ~]# cd /tmp

[root@linux tmp]# tar -zxvf /tmp/etc.tar.gz etc/passwd

# 我可以透过 tar -ztvf 来查阅 tarfile 内的文件名称，如果单只要一个文件，

# 就可以透过这个方式来下达！注意到！ etc.tar.gz 内的根目录 / 是被拿掉了！

 

范例五：我要备份 /home, /etc ，但不要 /home/dmtsai

[root@linux ~]# tar --exclude /home/dmtsai -zcvf myfile.tar.gz /home/* /etc

 

另外：tar命令的C参数

 

　　$ tar -cvf file2.tar /home/usr2/file2
　　tar: Removing leading '/' from members names
　　home/usr2/file2
　　该命令可以将/home/usr2/file2文件打包到当前目录下的file2.tar中，需要注意的是：使用绝对路径标识的源文件，在用tar命令压缩后，文件名连同绝对路径（这里是home/usr2/，根目录'/'被自动去掉了）一并被压缩进来。使用tar命令解压缩后会出现以下情况：
　　$ tar -xvf file2.tar
　　$ ls
　　…… …… home …… …… 
　　解压缩后的文件名不是想象中的file2，而是home/usr2/file2。

　　$ tar -cvf file2.tar -C /home/usr2 file2
　　该命令中的-C dir参数，将tar的工作目录从当前目录改为/home/usr2，将file2文件（不带绝对路径）压缩到file2.tar中。注意：-C dir参数的作用在于改变工作目录，其有效期为该命令中下一次-C dir参数之前。
　　使用tar的-C dir参数，同样可以做到在当前目录/home/usr1下将文件解压缩到其他目录，例如：
　　$ tar -xvf file2.tar -C /home/usr2
　　而tar不用-C dir参数时是无法做到的：
　　$ tar -xvf file2.tar /home/usr2
　　tar: /tmp/file: Not found i archive
　　tar: Error exit delayed from previous errors


添加用户
useradd 
 
>> 重定向到某个文件

echo $?  上一次命令是否执行成功。成功 0 失败 1-255


